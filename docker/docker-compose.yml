version: "3"

services:
  postgres:
    image: "postgres:9.6-alpine"
    environment:
      POSTGRES_USER: "transientbug"
      POSTGRES_PASSWORD: "yourpassword"
    networks:
      - "services"
    volumes:
      - "postgres:/var/lib/postgresql/data"

  redis:
    image: "redis:4-alpine"
    networks:
      - "services"
    volumes:
      - "redis:/data"

  sidekiq:
    image: "ghcr.io/transientbug/transientbug-rails/app:latest"
    depends_on:
      - "postgres"
      - "redis"
    volumes:
      - "./storage:/dropzone"
    command: ["bundle exec sidekiq -C config/sidekiq.yml"]
    networks:
      - "services"
    env_file:
      - ".env.production"

  #clockwork:
    #image: "ghcr.io/transientbug/transientbug-rails/app:latest"
    #depends_on:
      #- "postgres"
      #- "redis"
      #- "sidekiq"
    #command: bundle exec clockwork clock.rb
    #networks:
      #- "services"
    #env_file:
      #- ".env.production"

  rails:
    image: "ghcr.io/transientbug/transientbug-rails/app:latest"
    depends_on:
      - "postgres"
      - "redis"
    ports:
      - "8000:3000"
    volumes:
      - "./storage:/dropzone"
    networks:
      - "exposed"
      - "services"
    env_file:
      - ".env.production"
    healthcheck:
      test: "curl -f http://localhost:8000/"
      interval: 1m
      timeout: 10s
      retries: 5

  #cable:
    #image: "ghcr.io/transientbug/transientbug-rails/app:latest"
    #depends_on:
      #- "redis"
    #command: bundle exec puma -p 28080 cable/config.ru
    #ports:
      #- "28080:28080"
    ##volumes:
      ##- ".:/app"
    #networks:
      #- "exposed"
      #- "services"
    #env_file:
      #- ".env.production"

volumes:
  redis:
  postgres:

networks:
  exposed:
  services:
