<% content_for :page_header do %>
  <%= render Admin::PageHeaderComponent.new do |c| %>
    <% c.title do %>
      Service Announcements
    <% end %>

    <% c.tabs do %>
      <%= link_to "All", admin_service_announcements_path, class: ["tab", ("active" if params.dig(:filter, :status).blank?)] %>
      <%= link_to "Active", admin_service_announcements_path(filter: {status: :active}), class: ["tab", ("active" if params.dig(:filter, :status) == "active")] %>
      <%= link_to "Inactive", admin_service_announcements_path(filter: {status: :inactive}), class: ["tab", ("active" if params.dig(:filter, :status) == "inactive")] %>
    <% end %>

    <% c.actions do %>
      <%= link_to "New Announcement", new_admin_service_announcement_path, class: "btn -primary" %>
    <% end %>
  <% end %>

  <%= render Admin::BreadcrumbsComponent.new do |c| %>
    <% c.crumbs([
      { name: "Service Announcements", href: admin_service_announcements_path }
    ]) %>
  <% end %>
<% end %>

<%= form_with  scope: :filter, method: :get, local: true, class: "generic-form" do |f| %>
  <%# Handle persisting the tab filter too on search %>
  <%= f.hidden_field :status, value: params.dig(:filter, :status) %>

  <div class="field-group">
    <%= f.label :name, class: "block text-sm font-medium text-gray-700" %>

    <div class="prefixed">
      <%= f.label :name_type, class: "sr-only" %>
      <%= f.select :name_type, [ ["Contains", "contains"], ["Equals", "equals"] ], {selected: params.dig(:filter, :name_type)}, class: "prefix" %>

      <%= f.text_field :name, value: params.dig(:filter, :name), class: "input" %>
    </div>
  </div>

  <div class="actions">
    <%= f.submit "Filter", class: "btn -secondary" %>
    <%= link_to "Clear Filters", admin_service_announcements_path, class: "btn -tertiary" %>
  </div>
<% end %>

<% if @service_announcements.any? %>
  <div class="generic-table-wrapper">
    <table class="generic-table">
      <thead>
        <tr>
          <th>Title & Message</th>
          <th>Created At</th>
          <th><span class="sr-only">Actions</span></th>
        </tr>
      </thead>
      <tbody>
        <% @service_announcements.each do |service_announcement| %>
          <tr>
            <td class="w-full">
              <div class="flex items-center">
                <div class="flex-shrink-0 h-10 w-10">
                  <%= service_announcement.icon %>
                  <%= service_announcement.color %>
                </div>
                <div class="ml-4">
                  <div class="text-sm font-medium text-gray-900">
                    <%= service_announcement.title %>
                  </div>
                  <div class="text-sm text-gray-900">
                    <%= service_announcement.message %>
                  </div>
                </div>
              </div>
            </td>
            <td>
              <div class="text-sm text-gray-500">
                <%= service_announcement.created_at.to_s(:short) %>
              </div>
              <div class="text-xs text-gray-500">
                <%= service_announcement.start_at&.to_s(:short) || "No Start" %> - <%= service_announcement.end_at&.to_s(:short) || "No End" %>
              </div>
            </td>
            <td class="justify-right">
              <div class="btn-group">
                <%= button_to admin_service_announcement_path(service_announcement), method: :patch, params: { service_announcement: { active: !service_announcement.active } }, class: "btn -tertiary" do %>
                  <% if service_announcement.active %>
                    <%= inline_svg_pack_tag "feather/eye-off.svg" %>
                    <span class="ml-2">Deactivate</span>
                  <% else %>
                    <%= inline_svg_pack_tag "feather/eye.svg" %>
                    <span class="ml-2">Activate</span>
                  <% end %>
                <% end %>
                <%= link_to admin_service_announcement_path(service_announcement), class: "btn -secondary" do %>
                  <%= inline_svg_pack_tag "feather/maximize-2.svg" %>
                  <span class="ml-2">View</span>
                <% end %>
              </div>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>

  <%= paginate @service_announcements, views_prefix: "admin" %>
<% else %>
  <%= render Admin::ZeroStateComponent.new do |c| %>
    <% if params[:filter] %>
       <% c.title do %>
         Nothing Found
       <% end %>
      <% c.actions do %>
        <p>No service announcements match the specified filters<p>
        <%= link_to "Clear Filters", admin_service_announcements_path, class: "btn -secondary" %>
      <% end %>
    <% else %>
      <% c.actions do %>
        <p>No service announcements made yet.</p>
        <%= link_to "Make one?", new_admin_service_announcement_path, class: "btn -primary" %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
