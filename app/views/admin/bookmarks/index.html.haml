- content_for :page_title do
  Bookmarks

- content_for :store do
  != { records: store_records(@bookmarks, only: [:id, :title, :uri]) }.to_json

- content_for :menu do
  .bulk-action-menu
    = react_component "BulkActions/Header", actionUrl: admin_bookmarks_bulk_recache_path
    = react_component "BulkActions/admin/RecacheAll", actionUrl: admin_bookmarks_bulk_recache_path
    = react_component "BulkActions/admin/DeleteAll", actionUrl: admin_bookmarks_bulk_delete_path

= paginate @bookmarks

%table.ui.celled.table
  %thead
    %tr
      %th= react_component "BulkActions/SelectAll"
      %th Actions
      %th ID
      %th Creator
      %th URL
      %th Tags
      %th Cache
      %th Created At
  %tbody
    - if @bookmarks.any?
      - @bookmarks.each do |bookmark|
        %tr
          %td.collapsing= react_component "BulkActions/SelectSingle", id: bookmark.id
          %td.collapsing
            .ui.buttons
              = link_to admin_bookmark_path(bookmark), class: "ui icon button" do 
                %i.expand.icon
                view

              .ui.simple.dropdown.icon.button
                %i.dropdown.icon
                .menu
                  = modal_tag bookmark, :recache, url: admin_bookmark_cache_index_path(bookmark) do
                    %i.download.icon
                    recache

                  .divider
                  .header
                    %i.warning.sign.icon
                    DANGERZONE

                  = modal_tag bookmark, :delete, url: admin_bookmark_path(bookmark) do
                    %i.trash.icon
                    delete

          %td.collapsing= bookmark.id
          %td.collapsing= link_to bookmark.user.username, admin_user_path(bookmark.user)
          %td= bookmark.uri.to_s
          %td.collapsing= bookmark.tags.map(&:label).join ", "

          %td.collapsing
            - if bookmark.offline_caches.last
              = error_count_label bookmark.offline_caches.last.error_messages
            - else
              .ui.label
                %i.meh.icon
                Uncached

          %td.collapsing= bookmark.created_at.to_s(:long)

    - else
      %tr
        %td{ colspan: 6 }
          No bookmarks made yet

= paginate @bookmarks
