- content_for :page_title do
  Bookmark '#{ @bookmark.title }'

- content_for :sidebar do
  .tb.bulk-action-menu
    %h2 Actions

    = link_to edit_bookmark_path(@bookmark), class: "button button-white-outline hover:button-white text-white hover:text-gray-800" do
      %i.pencil.icon
      Edit

    -# TODO: replace
    = modal_tag @bookmark, :delete, url: bookmark_path(@bookmark), class: "button button-red-outline hover:button-red" do
      %i.trash.can.icon
      Delete

    %h2 Offline Archive

    - if @bookmark.current_offline_cache.present?
      Archive made on
      %time{ datetime: @bookmark.current_offline_cache.created_at.rfc2822 }
        = @bookmark.current_offline_cache.created_at.to_s(:long)
        UTC

      = link_to "View Archive", bookmark_cache_index_path(@bookmark), data: { turbolinks: false }, class: "button button-white-outline hover:button-white text-white hover:text-gray-800"
    - else
      No archive available

    = button_to bookmark_cache_index_path(@bookmark), class: "button button-white-outline hover:button-white text-white hover:text-gray-800" do
      - if @bookmark.offline_caches.any?
        Re-Archive
      - else
        Archive

- content_for :sidebar_body do
  = model_tag @bookmark, only: [ :uri, :title ], no_checkbox: true

  .ui.fluid.horizontally.padded.stackable.grid
    .eight.wide.column
      %h2.ui.header
        .content= @bookmark.title

      = link_to @bookmark.uri.to_s, @bookmark.uri.to_s
      %time{ datetime: @bookmark.created_at.rfc2822 }
        = @bookmark.created_at.to_s(:long)
        UTC

      .ui.item
        .ui.small.labels
          - @bookmark.tags.each do |tag|
            = link_to bookmarks_tag_path(tag) do
              .ui.label{ class: [tag.color] }= tag.label

    .eight.wide.column
      - if @bookmark.description.present?
        :markdown
          #{ @bookmark.description }
