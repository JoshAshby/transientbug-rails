%section( aria-labelledby="user_contact_settings" )
  = form_with model: application, url: doorkeeper_submit_path(application), method: :post do |f|
    .shadow.sm:rounded-md.sm:overflow-hidden
      .bg-white.py-6.px-4.sm:p-6
        %div
          %h2#user_contact_settings.text-lg.leading-6.font-medium.text-gray-900
            - if application.persisted?
              Editing App "#{ @application.name }"
            - else
              New App
          -#%p.mt-1.text-sm.text-gray-500 

          - if application.errors.any?
            %h2= "#{ pluralize application.errors.count, "error" } prohibited this application from being saved:"
            %ul
              - application.errors.full_messages.each do |message|
                %li= message

        .mt-6.grid.grid-cols-4.gap-6
          .col-span-4.sm:col-span-2
            = f.label :name, class: "block text-sm font-medium text-gray-700"
            = f.text_field :name, class: "mt-1 w-full default-input"
            %p.mt-2.text-sm.text-gray-500
              This name will be used to identify your app to users and will be publically listed.

              = doorkeeper_errors_for application, :name

        .mt-6.grid.grid-cols-4.gap-6
          .col-span-4.sm:col-span-2
            = f.label :redirect_uri, class: "block text-sm font-medium text-gray-700"
            = f.text_field :redirect_uri, class: "mt-1 w-full default-input"
            %p.mt-2.text-sm.text-gray-500
              Use one line per URI.
              - if Doorkeeper.configuration.native_redirect_uri
                Use this string to have the authorization token returned in the html document:
                %code
                  = Doorkeeper.configuration.native_redirect_uri

              = doorkeeper_errors_for application, :redirect_uri

        = f.hidden_field :scopes, value: "read write"
        .mt-6.grid.grid-cols-4.gap-6
          .col-span-4.sm:col-span-2
            = f.label :scopes, class: "block text-sm font-medium text-gray-700"
            = f.text_area :scopes, class: "mt-1 w-full default-input", value: "read write", disabled: true
            %p.mt-2.text-sm.text-gray-500
              -#Separate scopes with spaces. Leave blank to use the default scopes.
              All apps currently get the read and write scopes.

              = doorkeeper_errors_for application, :scopes

      .px-4.py-3.bg-gray-50.text-right.sm:px-6
        = f.submit class: "default-btn inline-flex bg-gray-500 hover:bg-limegreen-500"
