version: "3"

services:
  postgres:
    image: "postgres:9.6-alpine"
    environment:
      POSTGRES_USER: "transientbug"
      POSTGRES_PASSWORD: "yourpassword"
    networks:
      - "services"
    volumes:
      - "postgres:/var/lib/postgresql/data"

  elasticsearch:
    image: "blacktop/elasticsearch:5.6"
    networks:
      - "services"
    volumes:
      - "elasticsearch:/usr/share/elasticsearch/data"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  redis:
    image: "redis:4-alpine"
    networks:
      - "services"
    volumes:
      - "redis:/data"

  website:
    depends_on:
      - "postgres"
      - "elasticsearch"
      - "redis"
    build:
      context: .
      args:
        rails_master_key: ${RAILS_MASTER_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ".:/app"
    networks:
      - "exposed"
      - "services"
    env_file:
      - ".env"

  sidekiq:
    depends_on:
      - "postgres"
      - "elasticsearch"
      - "redis"
    build:
      context: .
      args:
        rails_master_key: ${RAILS_MASTER_KEY}
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - ".:/app"
    networks:
      - "services"
    env_file:
      - ".env"

  cable:
    depends_on:
      - "redis"
    build:
      context: .
      args:
        rails_master_key: ${RAILS_MASTER_KEY}
    command: bundle exec puma -p 28080 cable/config.ru
    ports:
      - "28080:28080"
    volumes:
      - ".:/app"
    networks:
      - "exposed"
      - "services"
    env_file:
      - ".env"

volumes:
  redis:
  postgres:
  elasticsearch:

networks:
  exposed:
  services:
